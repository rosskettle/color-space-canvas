var ColorSpaceCanvas=function(e,t){return this instanceof ColorSpaceCanvas?("undefined"==typeof e&&(e={}),console.log("aaa",e.axes),this._props={colorSpace:e.colorSpace||"hsv",colorValues:e.colorValues||[1,1,1],axes:e.axes||"sv"},"undefined"!=typeof t?(this.element=t,"width"in e||(this._props.width=t.width),"height"in e||(this._props.height=t.height)):this.element=this._createElement(),this._fragmentShaderSource=this._whichShader(this._props.colorSpace,this._props.axes),this._gl=this._getContext(),this._initGL(this._quadVertices(),this._fragmentShaderSource),this._setSize(),this._setAxes(),this._setColorValues(),this.draw(),void 0):new ColorSpaceCanvas(userProps,t)};ColorSpaceCanvas.prototype={setProps:function(e){console.log(e);for(var t in e)if(t in this._props)switch(this._props[t]=e[t],t){case"colorValues":this._setColorValues();case"constant1":this._setColorValues();case"axes":this._setAxes();case"width":case"height":this._setSize()}this.draw()},draw:function(){var e=this._gl;e.clearColor(1,1,1,1),e.clear(e.COLOR_BUFFER_BIT),e.drawArrays(e.TRIANGLE_STRIP,0,4)},_whichShader:function(e,t){switch(this._props.colorSpace){case"hsv":if(1===t.length)return ColorSpaceCanvas.Shaders.HSVSource1D;if(2===t.length)return ColorSpaceCanvas.Shaders.HSVSource2D;case"rgb":if(1===t.length)return ColorSpaceCanvas.Shaders.RGBSource1D;if(2===t.length)return ColorSpaceCanvas.Shaders.RGBSource2D;case"lab":if(1===t.length)return ColorSpaceCanvas.Shaders.LABSource1D;if(2===t.length)return ColorSpaceCanvas.Shaders.LABSource2D;case"lch":if(1===t.length)return ColorSpaceCanvas.Shaders.LCHSource1D;if(2===t.length)return ColorSpaceCanvas.Shaders.LCHSource2D}},_shaderProgram:null,_uniforms:null,_attributes:null,_vertexBuffer:null,_setSize:function(){this.element.setAttribute("width",this._props.width),this.element.setAttribute("height",this._props.height),this._gl.viewport(0,0,this._props.width,this._props.height),this._gl.uniform2f(this._uniforms.uResolution,this._props.width,this._props.height),this._setResolution()},_setResolution:function(){this._gl.uniform2f(this._uniforms.uResolution,this._props.width,this._props.height)},_setAxes:function(){console.log("_setAxes",this._props.axes);var e;switch(this._props.axes){case"l":case"ab":case"ch":case"r":case"gb":case"h":case"sv":e=0;break;case"a":case"lb":case"lc":case"g":case"rb":case"s":case"hv":e=1;break;case"b":case"lb":case"lh":case"b":case"rg":case"v":case"hs":e=2}this._gl.uniform1i(this._uniforms.uChannel,e)},_setColorValues:function(){this._gl.uniform3fv(this._uniforms.uColorValues,new Float32Array(this._props.colorValues))},_createElement:function(){var e=document.createElement("canvas");return e},_getContext:function(){return this.element.getContext("webgl")},_quadVertices:function(){return new Float32Array([1,1,-1,1,1,-1,-1,-1])},_initGL:function(e,t){this._shaderProgram=this._loadShaders(t),this._uniforms=this._getUniforms(this._shaderProgram),this._attributes=this._getAttributes(this._shaderProgram),this._vertexBuffer=this._loadVertexBuffer(e),this._bind()},_loadShaders:function(e){var t=this._gl,r=["attribute vec2 aXY;","void main(void) {","   gl_Position = vec4(aXY, 0, 1.0);","}"].join("\n"),s=t.createShader(t.VERTEX_SHADER);if(t.shaderSource(s,r),t.compileShader(s),!t.getShaderParameter(s,t.COMPILE_STATUS))throw new Error("Vertex Shader compilation failed.");var a=t.createShader(t.FRAGMENT_SHADER);if(t.shaderSource(a,e),t.compileShader(a),!t.getShaderParameter(a,t.COMPILE_STATUS))throw new Error("Fragment Shader compilation failed.");var i=t.createProgram();if(t.attachShader(i,a),t.attachShader(i,s),t.linkProgram(i),!t.getProgramParameter(i,t.LINK_STATUS))throw new Error("Shaders failed to link");return t.useProgram(i),i},_getUniforms:function(e){return{uResolution:this._gl.getUniformLocation(e,"uResolution"),uChannel:this._gl.getUniformLocation(e,"uChannel"),uColorValues:this._gl.getUniformLocation(e,"uColorValues")}},_getAttributes:function(e){return{aXY:this._gl.getAttribLocation(e,"aXY")}},_loadVertexBuffer:function(e){var t=this._gl,r=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,r),t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW),r},_bind:function(){var e=this._gl;e.enableVertexAttribArray(this._attributes.aXY),e.bindBuffer(e.ARRAY_BUFFER,this._vertexBuffer),e.vertexAttribPointer(this._attributes.aXY,2,e.FLOAT,!1,0,0)}},"undefined"!=typeof module&&(module.exports=ColorSpaceCanvas);
ColorSpaceCanvas.Shaders={HSVSource2D:["precision mediump float;","uniform vec2 uResolution;","uniform vec3 uColorValues;","uniform int uChannel;","const   int cH = 0;","const   int cS = 1;","const   int cV = 2;","void main(void) {","   float x = 1.0 / uResolution.x * gl_FragCoord.x;","   float y = 1.0 / uResolution.y * gl_FragCoord.y;","   float H;","   float S;","   float V;","   if (uChannel == cH) {","      H = uColorValues.x;","      S = x;","      V = y;","   } else if (uChannel == cS) {","      H = x;","      S = uColorValues.y;","      V = y;","   } else if (uChannel == cV) {","      H = x;","      S = y;","      V = uColorValues.z;","   }","   float sector = H * 6.0;","   if (sector == 6.0)","     sector = 0.0;","   float side = floor(sector);","   float f = sector - side;","   float var_1 = V * (1.0 - S);","   float var_2 = V * (1.0 - S * (sector - side));","   float var_3 = V * (1.0 - S * (1.0 - (sector - side)));","   vec3 rgb;","   if (side == 0.0) {","     rgb.r = V;","     rgb.g = var_3;","     rgb.b = var_1;","   } else if (side == 1.0) {","     rgb.r = var_2;","     rgb.g = V;","     rgb.b = var_1;","   } else if (side == 2.0) {","     rgb.r = var_1;","     rgb.g = V;","     rgb.b = var_3;","   } else if (side == 3.0) {","     rgb.r = var_1;","     rgb.g = var_2;","     rgb.b = V;","   } else if (side == 4.0) {","     rgb.r = var_3;","     rgb.g = var_1;","     rgb.b = V;","   } else {","     rgb.r = V;","     rgb.g = var_1;","     rgb.b = var_2;","   }","   gl_FragColor = vec4(rgb, 1.0);","}"].join("\n"),HSVSource1D:["precision mediump float;","uniform vec2 uResolution;","uniform vec3 uColorValues;","uniform int uChannel;","const   int cH = 0;","const   int cS = 1;","const   int cV = 2;","void main(void) {","   float x = 1.0 / uResolution.x * gl_FragCoord.x;","   float y = 1.0; // / uResolution.y * gl_FragCoord.y;","   float H;","   float S;","   float V;","   if (uChannel == cH) {","      H = x;","      S = 1.0;//uColorValues.y;","      V = 1.0;//uColorValues.z;","   } else if (uChannel == cS) {","      H = uColorValues.x;","      S = x;","      V = uColorValues.z;","   } else if (uChannel == cV) {","      H = uColorValues.x;","      S = uColorValues.y;","      V = x;","   }","   float sector = H * 6.0;","   if (sector == 6.0)","     sector = 0.0;","   float side = floor(sector);","   float f = sector - side;","   float var_1 = V * (1.0 - S);","   float var_2 = V * (1.0 - S * (sector - side));","   float var_3 = V * (1.0 - S * (1.0 - (sector - side)));","   vec3 rgb;","   if (side == 0.0) {","     rgb.r = V;","     rgb.g = var_3;","     rgb.b = var_1;","   } else if (side == 1.0) {","     rgb.r = var_2;","     rgb.g = V;","     rgb.b = var_1;","   } else if (side == 2.0) {","     rgb.r = var_1;","     rgb.g = V;","     rgb.b = var_3;","   } else if (side == 3.0) {","     rgb.r = var_1;","     rgb.g = var_2;","     rgb.b = V;","   } else if (side == 4.0) {","     rgb.r = var_3;","     rgb.g = var_1;","     rgb.b = V;","   } else {","     rgb.r = V;","     rgb.g = var_1;","     rgb.b = var_2;","   }","   gl_FragColor = vec4(rgb, 1.0);","}"].join("\n"),RGBSource2D:["precision mediump float;","uniform vec2 uResolution;","uniform vec3 uColorValues;","uniform int uChannel;","const   int cR = 0;","const   int cG = 1;","const   int cB = 2;","void main(void) {"," float x = 1.0 / uResolution.x * gl_FragCoord.x;"," float y = 1.0 / uResolution.y * gl_FragCoord.y;"," vec3 rgb;"," if (uChannel == cR) {","   rgb.r = uColorValues.r;","   rgb.g = y;","   rgb.b = x;","  } else if (uChannel == cG) {","   rgb.r = x;","   rgb.g = uColorValues.g;","   rgb.b = y;","  } else if (uChannel == cB) {","   rgb.r = x;","   rgb.g = y;","   rgb.b = uColorValues.b;","  }","gl_FragColor = vec4(rgb, 1.0);","}"].join("\n"),RGBSource1D:["precision mediump float;","uniform vec2 uResolution;","uniform vec3 uColorValues;","uniform int uChannel;","const   int cR = 0;","const   int cG = 1;","const   int cB = 2;","void main(void) {"," float x = 1.0 / uResolution.x * gl_FragCoord.x;"," float y = 1.0 / uResolution.y * gl_FragCoord.y;"," vec3 rgb;"," if (uChannel == cR) {","   rgb.r = x;","   rgb.g = uColorValues.g;","   rgb.b = uColorValues.b;","  } else if (uChannel == cG) {","   rgb.r = uColorValues.r;","   rgb.g = x;","   rgb.b = uColorValues.b;","  } else if (uChannel == cB) {","   rgb.r = uColorValues.r;","   rgb.g = uColorValues.r;","   rgb.b = x;","  }","gl_FragColor = vec4(rgb, 1.0);","}"].join("\n"),LABSource2D:["precision mediump float;","uniform vec2 uResolution;","uniform vec3 uColorValues;","uniform int uChannel;","const   int cL = 0;","const   int cA = 1;","const   int cB = 2;","void main(void) {","  float x = 1.0 / uResolution.x * gl_FragCoord.x;","  float y = 1.0 / uResolution.y * gl_FragCoord.y;","  float L,a,b;","  if (uChannel == cL) {","    L = uColorValues.x;","    a = x * 256.0 - 128.0;","    b = y * 256.0 - 128.0;","  } else if (uChannel == cA) {","    L = x * 100.0;","    a = uColorValues.y;","    b = y * 256.0 - 127.0;","  } else if (uChannel == cB) {","    L = x * 100.0;","    a = y * 256.0 - 127.0;","    b = uColorValues.z;","  }","  float Y = ( L + 16.0 ) / 116.0;","  float X = a / 500.0 + Y;","  float Z = Y - b / 200.0;","  if (pow(Y, 3.0) > 0.008856)","    Y = pow(Y, 3.0);","  else","    Y = (Y - 16.0 / 116.0) / 7.787;","  if (pow(X, 3.0) > 0.008856)","    X = pow(X, 3.0);","  else","    X = (X - 16.0 / 116.0) / 7.787;","  if (pow(Z, 3.0) > 0.008856)","    Z = pow(Z, 3.0);","  else","    Z = (Z - 16.0 / 116.0) / 7.787;","  float R = X *  3.2406 + Y * -1.5372 + Z * -0.4986;","  float G = X * -0.9689 + Y *  1.8758 + Z *  0.0415;","  float B = X *  0.0557 + Y * -0.2040 + Z *  1.0570;","  if (R > 0.0031308)","    R = 1.055 * pow(R, 1.0 / 2.4) - 0.055;","  else","    R = 12.92 * R;","  if (G > 0.0031308)","    G = 1.055 * pow(G, 1.0 / 2.4) - 0.055;","  else","    G = 12.92 * G;","  if (B > 0.0031308)","    B = 1.055 * pow(B, 1.0 / 2.4) - 0.055;","  else","    B = 12.92 * B;","  gl_FragColor = vec4(R,G,B, 1.0);","}"].join("\n"),LCHSource2D:["precision mediump float;","uniform vec2 uResolution;","uniform vec3 uColorValues;","uniform int uChannel;","const   int cL = 0;","const   int cC = 1;","const   int cH = 2;","const   vec3 lch = vec3(70.0,0.0,0.0);","void main(void) {","  float x = 1.0 / uResolution.x * gl_FragCoord.x;","  float y = 1.0 / uResolution.y * gl_FragCoord.y;","  float l = lch.x;","  float c = lch.y;","  float h = lch.z;","  h = x * 6.248;","  c = y * 100.0;","  vec3 lab = vec3(l, cos(h), sin(h));","  float L,a,b;","  if (uChannel == cL) {","    L = lab[0];//uColorValues.x;","    a = lab[1] * c;","    b = lab[2] * c;","  } else if (uChannel == cC) {","    L = x * 100.0;","    a = uColorValues.y;","    b = y * 256.0 - 127.0;","  } else if (uChannel == cH) {","    L = x * 100.0;","    a = y * 256.0 - 127.0;","    b = uColorValues.z;","  }","  float Y = ( L + 16.0 ) / 116.0;","  float X = a / 500.0 + Y;","  float Z = Y - b / 200.0;","  if (pow(Y, 3.0) > 0.008856)","    Y = pow(Y, 3.0);","  else","    Y = (Y - 16.0 / 116.0) / 7.787;","  if (pow(X, 3.0) > 0.008856)","    X = pow(X, 3.0);","  else","    X = (X - 16.0 / 116.0) / 7.787;","  if (pow(Z, 3.0) > 0.008856)","    Z = pow(Z, 3.0);","  else","    Z = (Z - 16.0 / 116.0) / 7.787;","  float R = X *  3.2406 + Y * -1.5372 + Z * -0.4986;","  float G = X * -0.9689 + Y *  1.8758 + Z *  0.0415;","  float B = X *  0.0557 + Y * -0.2040 + Z *  1.0570;","  if (R > 0.0031308)","    R = 1.055 * pow(R, 1.0 / 2.4) - 0.055;","  else","    R = 12.92 * R;","  if (G > 0.0031308)","    G = 1.055 * pow(G, 1.0 / 2.4) - 0.055;","  else","    G = 12.92 * G;","  if (B > 0.0031308)","    B = 1.055 * pow(B, 1.0 / 2.4) - 0.055;","  else","    B = 12.92 * B;","  gl_FragColor = vec4(R,G,B, 1.0);","}"].join("\n")},"undefined"!=typeof module&&(module.exports=ColorSpaceCanvas.Shaders);